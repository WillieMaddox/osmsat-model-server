services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-osmsat_models}
      POSTGRES_USER: ${DB_USER:-osmsat}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-osmsat123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-osmsat}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  server:
    build: .
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3001}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-osmsat_models}
      - DB_USER=${DB_USER:-osmsat}
      - DB_PASSWORD=${DB_PASSWORD:-osmsat123}
      - JWT_SECRET=${JWT_SECRET}
      - DISABLE_REGISTRATION_WITHOUT_LINK=${DISABLE_REGISTRATION_WITHOUT_LINK:-true}
      # SSL Configuration (if using direct HTTPS)
      - SSL_CERT_PATH=${SSL_CERT_PATH:-}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-}
    volumes:
      - ./uploads:/app/uploads
      - ./public:/app/public
      # Mount SSL certificates if using direct HTTPS
      - ${SSL_CERT_PATH:-/dev/null}:${SSL_CERT_PATH:-/dev/null}:ro
      - ${SSL_KEY_PATH:-/dev/null}:${SSL_KEY_PATH:-/dev/null}:ro
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: